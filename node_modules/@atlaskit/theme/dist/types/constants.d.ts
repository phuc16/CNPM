import type { Layers } from './types';
export declare const CHANNEL = "__ATLASKIT_THEME__";
export declare const DEFAULT_THEME_MODE = "light";
export declare const THEME_MODES: string[];
export declare const borderRadius: () => number;
export declare const gridSize: () => number;
export declare const fontSize: () => number;
export declare const fontSizeSmall: () => number;
export declare const fontFamily: () => string;
export declare const codeFontFamily: () => string;
export declare const focusRing: (color?: string, outlineWidth?: number) => string;
export declare const noFocusRing: () => string;
export declare const layers: {
    [P in keyof Layers]: () => Layers[P];
};
export declare const visuallyHidden: () => {
    border: string;
    clip: string;
    height: string;
    overflow: "hidden";
    padding: string;
    position: "absolute";
    width: string;
    whiteSpace: "nowrap";
};
/**
 * Deprecated Styled Components mixin.
 * Use visuallyHidden instead.
 * @deprecated
 */
export declare const assistive: () => {
    border: string;
    clip: string;
    height: string;
    overflow: "hidden";
    padding: string;
    position: "absolute";
    width: string;
    whiteSpace: "nowrap";
};
export declare const skeletonShimmer: () => {
    readonly css: {
        readonly backgroundColor: "var(--ds-background-subtleNeutral-resting)";
        readonly animationDuration: "1.5s";
        readonly animationIterationCount: "infinite";
        readonly animationTimingFunction: "linear";
        readonly animationDirection: "alternate";
    };
    readonly keyframes: {
        readonly from: {
            readonly backgroundColor: "var(--ds-background-subtleNeutral-resting)";
        };
        readonly to: {
            readonly backgroundColor: "var(--ds-background-subtleNeutral-hover)";
        };
    };
};
